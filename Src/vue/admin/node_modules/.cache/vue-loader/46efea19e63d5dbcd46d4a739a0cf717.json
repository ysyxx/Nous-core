{"remainingRequest":"D:\\code\\Src\\vue\\admin\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\code\\Src\\vue\\admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\code\\Src\\vue\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\code\\Src\\vue\\admin\\src\\views\\register.vue?vue&type=template&id=77453986&scoped=true&","dependencies":[{"path":"D:\\code\\Src\\vue\\admin\\src\\views\\register.vue","mtime":1750821631372},{"path":"D:\\code\\Src\\vue\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\code\\Src\\vue\\admin\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\code\\Src\\vue\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\code\\Src\\vue\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}